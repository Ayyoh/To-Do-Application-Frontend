/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as FoldersFolderIdRouteImport } from './routes/folders/$folderId'
import { Route as AuthSignInRouteImport } from './routes/auth/signIn'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const FoldersFolderIdRoute = FoldersFolderIdRouteImport.update({
  id: '/folders/$folderId',
  path: '/folders/$folderId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/signIn',
  path: '/auth/signIn',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/signIn': typeof AuthSignInRoute
  '/folders/$folderId': typeof FoldersFolderIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/signIn': typeof AuthSignInRoute
  '/folders/$folderId': typeof FoldersFolderIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/signIn': typeof AuthSignInRoute
  '/folders/$folderId': typeof FoldersFolderIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth/register' | '/auth/signIn' | '/folders/$folderId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth/register' | '/auth/signIn' | '/folders/$folderId'
  id:
    | '__root__'
    | '/'
    | '/auth/register'
    | '/auth/signIn'
    | '/folders/$folderId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthSignInRoute: typeof AuthSignInRoute
  FoldersFolderIdRoute: typeof FoldersFolderIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/folders/$folderId': {
      id: '/folders/$folderId'
      path: '/folders/$folderId'
      fullPath: '/folders/$folderId'
      preLoaderRoute: typeof FoldersFolderIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signIn': {
      id: '/auth/signIn'
      path: '/auth/signIn'
      fullPath: '/auth/signIn'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthSignInRoute: AuthSignInRoute,
  FoldersFolderIdRoute: FoldersFolderIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
